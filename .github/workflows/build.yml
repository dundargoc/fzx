name: test

on: [push, pull_request]

env:
  # preferably should write to a log file instead
  UBSAN_OPTIONS: halt_on_error=1
  ASAN_OPTIONS: halt_on_error=1
  TSAN_OPTIONS: halt_on_error=1

jobs:
  build:
    name: ${{ matrix.flavor.name }}
    strategy:
      fail-fast: false
      matrix:
        flavor:
          - name: ubuntu gcc asan
            os: ubuntu-latest
            flags: -D CMAKE_CXX_COMPILER=g++ -D FZX_ENABLE_ASAN=ON -D FZX_ENABLE_UBSAN=ON
          - name: ubuntu gcc tsan
            os: ubuntu-latest
            flags: -D CMAKE_CXX_COMPILER=g++ -D FZX_ENABLE_TSAN=ON
          - name: ubuntu clang asan
            os: ubuntu-latest
            flags: -D CMAKE_CXX_COMPILER=clang++ -D FZX_ENABLE_ASAN=ON -D FZX_ENABLE_UBSAN=ON
          - name: ubuntu clang tsan
            os: ubuntu-latest
            flags: -D CMAKE_CXX_COMPILER=clang++ -D FZX_ENABLE_TSAN=ON
          - name: macos clang ubsan
            os: macos-latest
            flags: -D FZX_ENABLE_UBSAN=ON

    runs-on: ${{ matrix.flavor.os }}

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Set reusable strings
      # Turn repeated input strings (such as the build output directory) into step outputs. These step outputs can be used throughout the workflow file.
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: >
        cmake
        -B ${{ steps.strings.outputs.build-output-dir }}
        -D CMAKE_BUILD_TYPE=Debug
        -D FZX_BUILD_EXECUTABLE=OFF
        -D FZX_BUILD_LUA_MODULE=OFF
        -D FZX_BUILD_TESTS=ON
        ${{ matrix.flavor.flags }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config Debug --parallel

    - name: Run tests
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: bin/test
